{
  "adb_force_stop": {
    "prefix": [
      "astop"
    ],
    "description": "终止某个应用",
    "body": [
      "adb shell am force-stop com.${packageName}"
    ]
  },
  "adb_packages_names": {
    "prefix": [
      "apacakges"
    ],
    "description": "adb 查看包名",
    "body": [
      "adb shell pm list packages"
    ]
  },
  "shell_if_else_if": {
    "prefix": [
      "!ifif"
    ],
    "description": "\nif [ ${1:true} ]\nthen\n   echo \"true\"\nelif [ ${2:true} ]\nthen\n   echo \"second true\"\nelse\n   echo \"default\"\nfi\n",
    "body": [
      "if [ ${1:true} ]",
      "then",
      "   echo \"true\"",
      "elif [ ${2:true} ]",
      "then",
      "   echo \"second true\"",
      "else",
      "   echo \"default\"",
      "fi"
    ]
  },
  "shell_if_else": {
    "prefix": [
      "!elseif",
      "!ife"
    ],
    "description": "\nif ${1:true}; then\n   ${2:echo \"true\"}\nelse \n   ${2:echo \"false\"}\nfi\n",
    "body": [
      "if ${1:true}; then",
      "   ${2:echo \"true\"}",
      "else ",
      "   ${2:echo \"false\"}",
      "fi"
    ]
  },
  "shell_if_expression": {
    "prefix": [
      "!if"
    ],
    "description": "\n# 判断\nif [ ${1:true} ]\nthen\n    ${2:echo \"123\"}\nfi\n",
    "body": [
      "# 判断",
      "if [ ${1:true} ]",
      "then",
      "    ${2:echo \"123\"}",
      "fi"
    ]
  },
  "shell_if": {
    "prefix": [
      "!if"
    ],
    "description": "\n# 判断\nif ${1:true};\nthen\n    ${2:echo \"true\"}\nfi\n",
    "body": [
      "# 判断",
      "if ${1:true};",
      "then",
      "    ${2:echo \"true\"}",
      "fi"
    ]
  },
  "shell_test_equal": {
    "prefix": [
      "!test",
      "!equal"
    ],
    "description": "\nisEqual=\\$(test \\$((${1:\\$value})) -eq \\$((${2:\\$value2})))\n",
    "body": [
      "isEqual=\\$(test \\$((${1:\\$value})) -eq \\$((${2:\\$value2})))"
    ]
  },
  "shellscript_tar_out _from_gz": {
    "prefix": [
      "!tarout"
    ],
    "description": "\n此为解压\n\n-f <filename>  后加 filename\n-z 压缩 采用 gz\n-j 压缩 采用 bz2\n-c: 建立压缩档案（.tar)\n-v 显示所有过程\n\n-x 解压\n-O 解开到标准输出\n\n",
    "body": [
      "tar -zxvf ${1:压缩包名}.tar.gz -C ${2:.}"
    ]
  },
  "shellscript_tar_to_gz": {
    "prefix": [
      "!tar",
      "!gz"
    ],
    "description": "此为压缩\n\n-f <filename>  后加 filename\n-z 压缩 采用 gz\n-j 压缩 采用 bz2\n-c: 建立压缩档案（.tar)\n-v 显示所有过程\n\n-x 解压\n-O 解开到标准输出\n",
    "body": [
      "$now = ${1:$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND}",
      "tar -zcvf target.tar.gz ${2:./*}"
    ]
  },
  "text_function": {
    "body": "# 函数\ndemoFun() {\n  echo \"我是一个函数\"\n}\n# 执行\ndemoFun\n",
    "description": "file",
    "prefix": [
      "!function"
    ]
  },
  "text_log_split": {
    "body": "echo \"---------------------------------------------------------------------\"\n",
    "description": "file",
    "prefix": [
      "!log_split"
    ]
  },
  "text_packageDescription": {
    "body": "description=$(node -p \"require(\"./package.json\").description\")\n",
    "description": "file",
    "prefix": [
      "!packageDescription"
    ]
  },
  "text_packageVersion": {
    "body": "version=$(node -p \"require(\"./package.json\").version\")\n",
    "description": "file",
    "prefix": [
      "!packageVersion"
    ]
  }
}